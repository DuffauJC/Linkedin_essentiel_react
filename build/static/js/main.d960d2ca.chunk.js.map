{"version":3,"sources":["components/ToDo.js","components/ToDoList.js","components/NavBar.js","components/AddTask.js","initialData.js","components/Fetching.js","components/App.js","index.js"],"names":["ToDo","props","useState","completed","task","state","setState","className","name","onClick","prevState","onToggleCompleted","id","ToDoList","filteredTasks","tasks","match","params","filter","length","map","NavBar","onDeleteCompleted","to","exact","AddTask","onSubmit","e","preventDefault","onAddTask","history","push","handleSubmit","form","type","required","value","onChange","target","initialData","Fetching","App","fetching","useEffect","console","log","delay","Math","floor","random","setTimeout","taskId","taskToUpdate","find","newTaskName","newTask","uniqueid","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d960d2ca.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst ToDo = (props) => {\r\n\r\n    const [state, setState] = useState({\r\n        completed: props.task.completed\r\n    })\r\n\r\n\r\n    const toggleCompleted = () => {\r\n        setState(prevState => ({\r\n            completed:!prevState.completed\r\n        }))\r\n        props.onToggleCompleted(props.task.id)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <li className={\"list-group-item d-flex align-items-center justify-content-between \" + (state.completed? 'bg-success':null)}>\r\n            {props.task.name}\r\n            <button className={\"btn btn-sm ml-auto \" + (state.completed ? 'btn-success' : 'btn-outline-success')} onClick={()=>toggleCompleted()}>&#x2713;</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ToDo\r\n","import React from 'react'\r\nimport ToDo from './ToDo'\r\n\r\nconst ToDoList = ({ tasks, match, onToggleCompleted }) => {\r\n    let filteredTasks\r\n\r\n    switch (match.params.filter) {\r\n        case 'completed':\r\n            filteredTasks = tasks.filter(task => task.completed)\r\n            break;\r\n\r\n        default:\r\n            filteredTasks = tasks\r\n            break;\r\n    }\r\n\r\n    if (filteredTasks.length === 0) {\r\n        return (\r\n            \r\n            <div>\r\n                <h1 className=\"m-3\">Liste de tâches</h1>\r\n                <ul className=\"list-group m-3\">\r\n                   <li className='list-group-item'>Aucune tâche à afficher</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n\r\n    } else {\r\n        return (\r\n            <div>\r\n                <h1 className=\"m-3\">Liste de tâches</h1>\r\n                <ul className=\"list-group m-3\">\r\n                    {\r\n                        filteredTasks.map((task) => <ToDo task={task} key={task.id} onToggleCompleted={onToggleCompleted} />)\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ToDoList\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { FaListAlt, FaCheckSquare, FaPlusSquare, FaTrash } from 'react-icons/fa'\r\n\r\nconst NavBar = ({ onDeleteCompleted}) => {\r\n    return (\r\n        <footer className=\"d-flex justify-content-between bg-secondary p-3\" id=\"mainFooter\">\r\n            <div className=\"btn-group\">\r\n                <Link to=\"/\" className=\"btn btn-outline-dark bg-light\" exact={true}><FaListAlt /></Link>\r\n                <Link to=\"/completed\" className=\"btn btn-outline-dark bg-light\"><FaCheckSquare /></Link>\r\n                <Link to=\"/add-task\" className=\"btn btn-outline-dark bg-light\" exact={true}><FaPlusSquare /></Link>\r\n            </div>\r\n            <button className=\"btn btn-outline-dark bg-light\" onClick={onDeleteCompleted}><FaTrash /></button>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React,{useState} from 'react'\r\n\r\nconst AddTask = (props) => {\r\n   \r\n   const [state,setState]=useState('')\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        props.onAddTask(state)\r\n        props.history.push('/')\r\n    }\r\n    return (\r\n        <section>\r\n            <h1 className=\"m-3\">Nouvelle tâche</h1>\r\n            <div className=\"card mx-3\">\r\n                <form className=\"card-body\" onSubmit={(e) => handleSubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                        <label form=\"taskName\">Nom de la tâche</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"taskName\" id=\"taskName\" required value={state.value} onChange={(e) => {\r\n                            setState(e.target.value)\r\n                        }} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Créer</button>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","let initialData = [\n    {id: 'jsertu7a', name: 'Ranger la vaisselle', completed: false},\n    {id: 'jseruo7l', name: 'Répondre appel d\\'offres', completed: false},\n    {id: 'jseruy2q', name: 'Signer contrat', completed: false},\n    {id: 'jserv4sw', name: 'Aspirer le salon', completed: false}\n]\n\nexport default initialData;","import React from 'react'\r\nimport {FaSpinner} from 'react-icons/fa'\r\n\r\nconst Fetching = () => {\r\n    return (\r\n        <div className='fetching'>\r\n            <FaSpinner className='spinner'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Fetching\r\n","import React, { useState, useEffect } from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport ToDoList from './ToDoList'\r\nimport NavBar from './NavBar'\r\nimport AddTask from './AddTask'\r\nimport initialData from '../initialData'\r\nimport uniqueid from 'uniqueid'\r\nimport Fetching from './Fetching'\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n    const [state, setState] = useState({\r\n        tasks: [],\r\n        fetching: true\r\n    })\r\n    useEffect(() => {\r\n        console.log('Salut')\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let delay = Math.floor(Math.random() * 5000)\r\n        console.log('chargement')\r\n        setTimeout(() => {\r\n            setState({\r\n                fetching: false,\r\n                tasks: initialData\r\n            })\r\n        }, delay)\r\n    }, [])\r\n\r\n\r\n    const onToggleCompleted = (taskId) => {\r\n        let taskToUpdate = state.tasks.find(task => task.id === taskId)\r\n        taskToUpdate.completed = !taskToUpdate.completed\r\n\r\n        setState(prevState => (\r\n            prevState.tasks.map(task => {\r\n                return task.id === taskId ? taskToUpdate : task\r\n            })\r\n        ))\r\n    }\r\n\r\n    const onAddTask = (newTaskName) => {\r\n        console.log('newtask', newTaskName)\r\n        let newTask = {\r\n            id: uniqueid('jser'),\r\n            name: newTaskName,\r\n            completed: false\r\n        }\r\n        setState(prevState => ({\r\n            tasks: [...prevState.tasks, newTask]\r\n        }))\r\n    }\r\n\r\n    const onDeleteCompleted = () => {\r\n        setState(prevState => {\r\n            let newState = prevState.tasks.filter(task => !task.completed)\r\n            return {\r\n                tasks: newState\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <section id=\"todo\">\r\n            {state.fetching ? <Fetching /> : null}\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route path='/add-task' render={(props) => <AddTask {...props} onAddTask={onAddTask} />} />\r\n                    <Route path='/:filter?' render={(props) => <ToDoList {...props} tasks={state.tasks} onToggleCompleted={onToggleCompleted} />} />\r\n                </Switch>\r\n                <NavBar onDeleteCompleted={onDeleteCompleted} />\r\n            </BrowserRouter>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './css/toDo.css'\nimport App from './components/App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n\n"],"sourceRoot":""}